

Prerequisite:
Java 8
Docker (I was using docker for desktop windows version=18.09.2) 
Kubernetes (I was using built in "docker for desktop" kubernetes)
Clone this repository and run "mvn clean install" inside all four projects (CatalogService, EurekaServer, Gateway, CatalogData)

Project Explanation :

I found many examples over internet which covering topics like "Springboot Microservice Architecture" or "Deploy Microservices on Docker Containers" or "Manage Docker Images with Kubertenes clusters". But didn't found which covering all topics in single example step by step.
In this project I have created 3 Eureka Clients (CatalogService, Gateway, CatalogData) and one Eureka Server (EurekaServer).

EurekaServer: This microservice is acting as Eureka Server, all other service register itself in EurekaServer. 
Gateway: This microservice acting as a proxy server.
CatalogData: This microservice acting as Database layer.
CatalogService: This microservice is a middle layer between Gateway and CatalogData.

*Note: In this project I was not maintaining any business login, propose of this project to build our understanding towards Microservice Architecture and DevOps parts in Microservice world. That why we are not making any database interaction in "CatalogData" service and maintaining in memory list.


Running as a Springboot project:

Eureka Server : http://localhost:8761/
Gateway: http://localhost:8084/catservice/service/fetchCatalog
http://localhost:8100/service/fetchCatalog
http://localhost:8000/catalog/getAllCatalog



Docker compose:
http://localhost:8761/
http://localhost:8084/catservice/service/fetchCatalog
http://localhost:32771/service/fetchCatalog
http://localhost:32769/catalog/getAllCatalog


kubernetes:
https://localhost/
https://localhost/api/catservice/service/fetchCatalog
https://localhost/cts/service/fetchCatalog
https://localhost/data/catalog/getAllCatalog